

WAL(Write-Ahead Loggin),预写式日志，指在写入数据库之前想将要写的日志顺序写到磁盘。
这样做的好处是即便down机后，系统重启要能有依据使得数据库重新进入一个一致性的状态。

如果没有WAL，用户的每一步都直接持久到库中，那么就存在一个问题，比如用户A给用户B转账过程
中down机了，那么这个过程是失败的、无效的，然而在没有WAL的情况是，重启过后是没办法知道
这个操作是成功还是失败，而且失败的数据也已经写进去了（并且不知道怎么回滚），这就导致其他
用户会读取到脏数据。



来自wiki:

In computer science, write-ahead logging (WAL) is a family of techniques for
providing atomicity and durability (two of the ACID properties) in database
systems.

In a system using WAL, all modifications are written to a log before they are
applied. Usually both redo and undo information is stored in the log.

The purpose of this can be illustrated by an example. Imagine a program that is
 in the middle of performing some operation when the machine it is running on
 loses power. Upon restart, that program might well need to know whether the
 operation it was performing succeeded, half-succeeded, or failed. If a
 write-ahead log is used, the program can check this log and compare what it
 was supposed to be doing when it unexpectedly lost power to what was actually
done. On the basis of this comparison, the program could decide to undo what
it had started, complete what it had started, or keep things as they are.

WAL allows updates of a database to be done in-place. Another way to implement
atomic updates is with shadow paging, which is not in-place. The main advantage
of doing updates in-place is that it reduces the need to modify indexes and
block lists.
